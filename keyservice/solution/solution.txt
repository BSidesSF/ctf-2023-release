User 0 has a signing optimized key which means d is small.

keyservice> listkeys

User  0. (Michael, Wiener)
Public modulus: 19173722777128680380451525271679191418291608985195807365877348466209932096789829540468494762427260617932674333374819791857569382907633373187296661133807041523299981345109196896247358689437935088837180469859667027001108710268728464282457603285657997555813796982396357648783864328957041774619834464183974892215336931202887142775257162638227567795916849631879418703366968075327558597618889375847909030002879372628246439516856257123034613801068811040872610226640126845325360888420255522076702490519728913549816506559700968722987287982711642982806203231038207282962241126732091272664359023791547175594236747468986374404613
Public exponent: 4314533854052634177353208486230614563423467270731532610935995144318518657938464375341876835987222638050040237085419235270382411619514445551473888364087456168896361391795588732229384800972008638518176180381932709292509496586934518562547762571098950034839000418008674200916759873693903208025857029539208000904291178784361160741111752531456438739569879308327337846739694768715755406814916102353115587810113557348499464224362204183768066940832794960971422975891769083646088724594371754804481470300055402621103299438029139952559907124245061665005080060281970027804139486887258155423519250286200449615079167808292133690631


Using wiener's attack we can factor n
https://en.wikipedia.org/wiki/Wiener%27s_attack

makehnlist(x) = {my(f);f=contfrac(x);my(hnlist);hnlist=vector(#f+2);hnlist[1]=0;hnlist[2]=1;for(X=3,#f+2,hnlist[X]=f[X-2]*hnlist[X-1]+hnlist[X-2]);hnlist}
makeknlist(x) = {my(f);f=contfrac(x);my(knlist);knlist=vector(#f+2);knlist[1]=1;knlist[2]=0;for(X=3,#f+2,knlist[X]=f[X-2]*knlist[X-1]+knlist[X-2]);knlist}

kn(f, n) = if(n == -2, 1, if(n == -1, 0, f[n + 1] * kn(f, n - 1) + kn(f, n - 2)))
hn(f, n) = if(n == -2, 0, if(n == -1, 1, f[n + 1] * hn(f, n - 1) + hn(f, n - 2)))
approxfrac(f, n) = hn(f, n) / kn(f, n)

approxfraclist(n) = hnlist[n + 3] / knlist[n + 3]

root_from_phi(n, h) = {b = ((n - h) + 1); if(b^2 - 4 * n < 0, h, round((-b + sqrtint(b^2 - 4 * n)) / -2));}

wiener(n, e) = {hnlist = makehnlist(e/n); knlist = makeknlist(e/n); for (X = 4, #hnlist - 4, h = (e * knlist[X] - 1) / hnlist[X]; r = root_from_phi(n, h); if (n % r == 0, printf("found at %d: n = %d * %d\n", X - 4, r, n/r); break;))}

carmichael(p, q) = lcm(p - 1, q - 1)


GP/PARI> n = 19173722777128680380451525271679191418291608985195807365877348466209932096789829540468494762427260617932674333374819791857569382907633373187296661133807041523299981345109196896247358689437935088837180469859667027001108710268728464282457603285657997555813796982396357648783864328957041774619834464183974892215336931202887142775257162638227567795916849631879418703366968075327558597618889375847909030002879372628246439516856257123034613801068811040872610226640126845325360888420255522076702490519728913549816506559700968722987287982711642982806203231038207282962241126732091272664359023791547175594236747468986374404613

GP/PARI> e = 4314533854052634177353208486230614563423467270731532610935995144318518657938464375341876835987222638050040237085419235270382411619514445551473888364087456168896361391795588732229384800972008638518176180381932709292509496586934518562547762571098950034839000418008674200916759873693903208025857029539208000904291178784361160741111752531456438739569879308327337846739694768715755406814916102353115587810113557348499464224362204183768066940832794960971422975891769083646088724594371754804481470300055402621103299438029139952559907124245061665005080060281970027804139486887258155423519250286200449615079167808292133690631

GP/PARI> wiener(n, e)
found at 70: n = 135958652246567173042749537516852789562662752173373986539955401776178077421188785952913135759571421513137494675422504267463820741485126079392918901401454319808453458294341122301911177946289348718170727837445156308506562423899243567718920055556663705079444704790412129673721769508782168026487184009614308492563 * 141026131550320650420497353507218122536297365792496154566903180816353978069548916165516188222932995595555402096897208467668727071403538512840733038665088561749925673372434696309036497382128231004643377943996333131181989668312277729694426342779481317854814418163893790280054000334969896674674467229933148905351

GP/PARI> p = 135958652246567173042749537516852789562662752173373986539955401776178077421188785952913135759571421513137494675422504267463820741485126079392918901401454319808453458294341122301911177946289348718170727837445156308506562423899243567718920055556663705079444704790412129673721769508782168026487184009614308492563

GP/PARI> q = n/p
%102 = 141026131550320650420497353507218122536297365792496154566903180816353978069548916165516188222932995595555402096897208467668727071403538512840733038665088561749925673372434696309036497382128231004643377943996333131181989668312277729694426342779481317854814418163893790280054000334969896674674467229933148905351

GP/PARI> car = carmichael(p, q)
%103 = 9586861388564340190225762635839595709145804492597903682938674233104966048394914770234247381213630308966337166687409895928784691453816686593648330566903520761649990672554598448123679344718967544418590234929833513500554355134364232141228801642828998777906898491198178824391932164478520887309917232091987446107529973209545127475896957873601748441908944756956774281130054746367513271064075836864739853010187477759776771372268272193951032994090073224319479143286791981883490878376739851732877407595655666913501200389129739641649367945250060842696428416351031130013991001888892676355291626973897555446537548114719458503350

GP/PARI> d = lift(Mod(1/e, car))
%104 = 257097740844499025084451811305302637221


keyservice> readmsg

Enter user (by number) to read unread messages? 0

Welcome Michael(?), before we continue, you must prove it's you

Please provide the signature for 46714063324274167803754899373104816565 :

GP/PARI> lift(modexp(46714063324274167803754899373104816565, d, n))
%105 = 8389323210247599445411427509539575062789128623060890720730396638944635672899770354193703559391708109355240067862930210312196030749852929401323961926913435986393093802149003984593113867566191116233467338072074944013301091444843960646832754177611177747974399678968099785069454237929454148483658470465662307139461874839866824916416972709428191078250558185735279945072990244364639847465098527631759173656190552301027334459949099173696891618871763436933009220779080317192719582790074553358124043490991210098699396873336617205560649402988226993587840327839867229884028935508465192381687064361736109992815216760485507181811

Please provide the signature for 46714063324274167803754899373104816565 : 8389323210247599445411427509539575062789128623060890720730396638944635672899770354193703559391708109355240067862930210312196030749852929401323961926913435986393093802149003984593113867566191116233467338072074944013301091444843960646832754177611177747974399678968099785069454237929454148483658470465662307139461874839866824916416972709428191078250558185735279945072990244364639847465098527631759173656190552301027334459949099173696891618871763436933009220779080317192719582790074553358124043490991210098699396873336617205560649402988226993587840327839867229884028935508465192381687064361736109992815216760485507181811
Message 1: Michael the flag you requested is CTF{d_size_does_matter}

